{"version":3,"sources":["components/ui/Theme.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["createMuiTheme","palette","secondary","main","primary","useStyles","makeStyles","theme","headerContainer","width","padding","backgroundColor","borderRadius","Header","onClickAdd","showForm","classes","Grid","container","direction","justify","className","item","styles","textAlign","Typography","variant","Button","color","onClick","accordation","task","marginTop","expanded","margin","Task","taskDone","Accordion","root","AccordionSummary","expandIcon","aria-controls","id","name","AccordionDetails","date","priority","Tasks","taskItems","map","index","createStyles","display","flexWrap","textField","marginLeft","spacing","marginRight","saveButton","fontWeight","height","defaultProps","bgcolor","border","style","AddTask","addTask","React","useState","setPriority","setTask","Box","borderColor","justifyContent","noValidate","autoComplete","TextField","size","label","multiline","rowsMax","value","onChange","event","target","FormControlLabel","control","Checkbox","checked","e","console","log","Date","toDateString","alert","tasksContainer","mainContainer","App","setShowForm","setTaskItems","ThemeProvider","Container","maxWidth","xs","length","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbeb9684.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\n\nexport default createMuiTheme({\n    palette: {\n      secondary: {\n        main: '#76ff03',\n      },\n      primary: {\n          main: '#f44336'\n      }\n    },\n  });","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles'\n\n\nconst useStyles = makeStyles(theme => ({\n\theaderContainer: {\n\t\twidth: \"100%\",\n\t\tpadding: \"1rem\",\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\tborderRadius: 5\n\t}\n}))\n\nexport const Header = ({onClickAdd, showForm}) => {\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container direction=\"row\" justify=\"space-between\" className={classes.headerContainer} >\n\t\t\t<Grid  item styles={{textAlign: \"center\"}}>\n\t\t\t\t<Typography variant=\"h6\">Task Manager</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid  item>\n\t\t\t\t<Button variant=\"contained\" color=\"secondary\" onClick={() => onClickAdd()}>\n\t\t\t\t\t{showForm ? \"Close\" : \"Add\"}\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n\nexport default Header;","import React from 'react'\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/core/styles'\n\n\nconst useStyles = makeStyles(theme => ({\n\taccordation: {\n    width: \"100%\",\n    backgroundColor: \"#00a0b2\",\n  },\n  task: {\n    marginTop: \"0.5em\",\n    padding: 0,\n  },\n  expanded: {\n    margin: \"5em\",\n    backgroundColor: \"#007bb2\"\n  }\n}))\n\nconst Task = ({task, taskDone}) => {\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Accordion className={classes.task} classes={{root: classes.accordation, expanded: classes.expanded}} >\n          <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          \n          >\n            <Grid container justify=\"space-between\">\n              <Grid item>\n                <Typography variant=\"h5\">{task.name}</Typography>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => taskDone(task.id)}>DONE</Button>\n              </Grid>\n            </Grid>\n          \n          </AccordionSummary>\n          <AccordionDetails>\n          <Grid container justify=\"space-between\">\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  {task.date}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\" color=\"secondary\">\n                  {task.priority ? \"Top Priority\" : \"\"}\n                </Typography>\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n    </div>\n  )\n}\n\nexport default Task\n","import React from 'react'\n\nimport Task from './Task'\n\nconst Tasks = ({taskItems, taskDone}) => {\n\n    return (\n      <div>\n        {taskItems.map((task, index) => (\n          <Task key ={index} task={task} taskDone={taskDone}/>\n        ))}\n        \n      </div>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n    saveButton: {\n      borderRadius: 50,\n      fontWeight: \"bolder\",\n      padding: 0,\n      height: \"70%\"\n    }\n  })  \n);\n\n\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  // m: 5,\n  padding: 2,\n  border: 1,\n  borderRadius: 3,\n  style: { height: '8rem' },\n};\n\nconst AddTask = ({addTask}) => {\n  const classes = useStyles();\n\n  const [priority, setPriority] = React.useState(false);\n  const [task, setTask] = React.useState('');\n  // const [date, setDate] = React.useState('');\n\n  const handleCheck = (e) => {\n    setPriority(e.target.checked);\n  };\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTask(event.target.value);\n  };\n  // const handleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setDate(event.target.value);\n  // };\n\n  const onSave = () => {\n    console.log(task, priority);\n\n    if(!task) {\n      alert(\"enter the task please\");\n      return;\n    }\n    const date = new Date().toDateString()\n    const name=task;\n    addTask({ name, priority, date})\n    setTask(\"\");\n    setPriority(false);\n    // setDate(\"\");\n  }\n\n  return (\n    <Box display=\"grid\" borderColor=\"#d1ff33\" justifyContent=\"center\" {...defaultProps}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n            id=\"outlined-multiline-flexible\"\n            size=\"small\"\n            label=\"Task\"\n            multiline\n            rowsMax={4}\n            value={task}\n            onChange={handleChange}\n            variant=\"outlined\"\n            \n          />\n          <FormControlLabel\n                control={<Checkbox checked={priority} onChange={handleCheck} name=\"priority\" style={{marginLeft:\"1rem\"}}/>}\n                label=\"Priority\"\n            />\n        {/* <Grid container direction=\"row\">\n          <Grid item>\n            <FormControlLabel\n                control={<Checkbox checked={priority} onChange={handleCheck} name=\"priority\" />}\n                label=\"Priority\"\n            />\n          </Grid>\n          <Grid item>\n            <TextField id=\"date\" label=\"Date\" size=\"small\" value={date} onChange={handleDate}/>\n          </Grid>\n        </Grid> */}\n      </form> \n      <Button variant=\"outlined\" className={classes.saveButton} color=\"primary\" size=\"small\" onClick={onSave}>\n        Save\n      </Button>\n    </Box>\n  )\n}\n\nexport default AddTask\n","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './components/ui/Theme'\nimport Container from '@material-ui/core/Container';\n\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst useStyles = makeStyles(theme => ({\n\ttasksContainer: {\n    marginTop: \"2em\"\n  },\n  mainContainer: {\n    // marginTop: \"2em\",\n    border: \"3px solid #76ff03\",\n    padding: \"1rem\",\n    borderRadius: 5\n  }\n}))\n\n\n\nfunction App() {\n  const classes = useStyles();\n\n  const [showForm, setShowForm] = useState(false);\n  const [taskItems, setTaskItems] = useState([\n    {\"id\": 1,\n    \"name\": \"cleaning\",\n    \"priority\": true,\n    \"date\": \"12 feb 2020\"\n    },\n    {\"id\": 2,\n    \"name\": \"shopping\",\n    \"priority\": true,\n    \"date\": \"10 april 2020\"\n    },\n    {\"id\": 3,\n    \"name\": \"cleaning\",\n    \"priority\": false,\n    \"date\": \"12 feb 2020\"\n    }\n  ]);\n\n  const taskDone =(id) =>{\n    setTaskItems(taskItems.filter((task) => task.id !== id))\n  }\n\n  const onClickAdd = () => {\n    setShowForm(!showForm);\n  }\n\n  const addTask = (task) => {\n    const id = taskItems.length + 1;\n    const newTask = {...task, id}\n    setTaskItems([...taskItems, newTask]);\n    console.log(\"all tasks\")\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\" >\n      <Container maxWidth=\"sm\" className={classes.mainContainer}>\n        <Header onClickAdd={onClickAdd} showForm={showForm}/>\n        {/* <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} /> */}\n        <Grid container direction=\"column\" className={classes.tasksContainer}>\n          {showForm && <Grid item xs>\n            <AddTask addTask={addTask}/>\n          </Grid>}\n          \n          <Grid item xs>\n            <Tasks taskItems={taskItems} taskDone={taskDone}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}